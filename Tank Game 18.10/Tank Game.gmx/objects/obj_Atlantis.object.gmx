<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_atlantis</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Weapons
instance_create(x,y,obj_Flak_Cannon);
instance_create(x,y,obj_Dual_Browning_30);

// Speed
playerspeed = 15;

// Health Bar

hp = 150
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Death

if (hp &lt;= 0){
    with(obj_Tank_Turret){
        instance_destroy();
    }
    with(obj_lowcal){
        instance_destroy();
    }
    instance_destroy();    
} 

// Turn Left = "A"
if keyboard_check_direct(ord("A"))
{
    image_angle += 3;
    direction += 3;
}

// Turn Right = "D"
if keyboard_check_direct(ord("D"))
{
    image_angle -= 3;
    direction -= 3;
}
// place_meeting(x,y-playerspeed*sin(direction*pi/180),obj_wall) &lt;== collider
// Go Forwards = "W"
if (keyboard_check_direct(ord("W"))) and (place_free (x+playerspeed*cos(direction*pi/180),y-playerspeed*sin(direction*pi/180)))
{
    x = x+playerspeed*cos(direction*pi/180);
    y = y-playerspeed*sin(direction*pi/180);
    
   
}

// Go Backwards = "S"
if (keyboard_check_direct(ord("S"))) and (place_free (x-playerspeed*cos(direction*pi/180),y+playerspeed*sin(direction*pi/180)))
{
    x = x-playerspeed*cos(direction*pi/180);
    y = y+playerspeed*sin(direction*pi/180);
    
   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(x,y-90, "hp: " + string(hp));
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
